def product_except_self(nums):
    n = len(nums)
    
    # Initialize prefix and suffix arrays
    prefix_products = [1] * n
    suffix_products = [1] * n
    
    # Compute prefix products
    prefix_product = 1
    for i in range(n):
        prefix_products[i] = prefix_product
        prefix_product *= nums[i]
    
    # Compute suffix products
    suffix_product = 1
    for i in range(n - 1, -1, -1):
        suffix_products[i] = suffix_product
        suffix_product *= nums[i]
    
    # Compute the final result
    result = [prefix_products[i] * suffix_products[i] for i in range(n)]
    
    return result

# Example usage:
input_array = [1, 2, 3, 4]
output_array = product_except_self(input_array)
print(output_array)
