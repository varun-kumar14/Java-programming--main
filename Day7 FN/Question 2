// 2. Array Partition and Merge
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class ArrayPartition {
    public static void main(String[] args) {
        int[] array = {1, 2, 3, 4, 5};
        int partitionSize = 2;
        List<Integer> mergedArray = mergeArrayWithPartitionOrder(array, partitionSize, new int[]{3, 2, 1});

        // Output
        System.out.println(Arrays.toString(mergedArray.toArray()));
    }

    public static List<Integer> mergeArrayWithPartitionOrder(int[] array, int partitionSize, int[] partitionOrder) {
        List<List<Integer>> partitions = new ArrayList<>();

        for (int i = 0; i < array.length; i += partitionSize) {
            List<Integer> partition = new ArrayList<>();
            for (int j = i; j < i + partitionSize && j < array.length; j++) {
                partition.add(array[j]);
            }
            partitions.add(partition);
        }

        List<Integer> mergedArray = new ArrayList<>();
        for (int order : partitionOrder) {
            List<Integer> partition = partitions.get(order - 1);
            mergedArray.addAll(partition);
        }

        return mergedArray;
    }
}
